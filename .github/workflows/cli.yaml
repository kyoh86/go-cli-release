name: Test and Release CLI to the GitHub Release
on:
  workflow_dispatch:
    inputs:
      method:
        description: |
          Which number to increment in the semantic versioning.
          Set 'major', 'minor', 'patch' or 'release'.
        required: true
  push:
    branches:
      - '*'
  pull_request:

env:
  GO_VERSION: 1.15

jobs:
  test:
    name: Test
    strategy:
      fail-fast: true
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Test Go
        run: go test -race ./...

  advanced:
    name: Cover and Dry Run Release
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    needs: test
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Test Go
        run: go test -coverprofile=coverage.txt -covermode=atomic -v ./...
      - name: Upload Coverage
        uses: codecov/codecov-action@v1
        with:
          # token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          fail_ci_if_error: true
          file: coverage.txt
      - name: Run GoReleaser (dry-run)
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --rm-dist --skip-publish --snapshot

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    needs: test
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Bump-up Semantic Version
        uses: kyoh86/git-vertag-action@v1
        with:
          method: ${{ github.event.inputs.method }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: latest
          args: release --rm-dist
